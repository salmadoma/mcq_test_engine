version: '3'

services:
  mcq_test:
    build:
      context: .
      dockerfile: packaging/docker/mcq_test/Dockerfile
    ports:
      - ${MCQ_TEST_SERVER_PORT}:${MCQ_TEST_SERVER_PORT}
    env_file:
      - ./.env
    volumes:
      - ./services/mcq_test:/app/
    depends_on:
      - mcq-test-mongo-db
    restart: on-failure
    healthcheck:
      test: curl -s ${DJANGO_ALLOWED_HOSTS}:${MCQ_TEST_SERVER_PORT} || exit 1
      interval: 2s
      timeout: 10s
      retries: 30

  scoring:
    build:
      context: .
      dockerfile: packaging/docker/scoring/Dockerfile
    ports:
      - ${SCORING_SERVER_PORT}:${SCORING_SERVER_PORT}
    env_file:
      - ./.env
    volumes:
      - ./services/scoring:/app/
    depends_on:
      - mcq-test-mongo-db
    restart: on-failure
    healthcheck:
      test: curl -s ${DJANGO_ALLOWED_HOSTS}:${SCORING_SERVER_PORT} || exit 1
      interval: 2s
      timeout: 10s
      retries: 30

  mcq-test-mongo-db:
    image: mongo:5.0.6
    hostname: ${MCQ_TEST_MONGO_DB_HOST}
    expose:
      - ${MCQ_TEST_MONGO_DB_PORT}
    ports:
      - ${MCQ_TEST_MONGO_DB_PORT}:${MCQ_TEST_MONGO_DB_PORT}
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./services/mongodb/:/docker-entrypoint-initdb.d/:ro
    command: mongod --port ${MCQ_TEST_MONGO_DB_PORT}

  scoring-mongo-db:
    image: mongo:5.0.6
    hostname: ${SCORING_MONGO_DB_HOST}
    expose:
      - ${SCORING_MONGO_DB_PORT}
    ports:
      - ${SCORING_MONGO_DB_PORT}:${SCORING_MONGO_DB_PORT}
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    command: mongod --port ${SCORING_MONGO_DB_PORT}

volumes:
  mysql_data:
